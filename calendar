package test;

import java.util.Scanner;

/*
 * 一个整数，它加上100后是一个完全平方数，再加上169又是另一个完全平放时，这个数是多少：
 * 若一个数能表示成某个整数的平方的形式，则这个数为完全平方数
 * */


public class Char1 {
	public static void main(String[] arg) {
	//从键盘输入一个年月
	Scanner scanner=new Scanner(System.in);
	System.out.println("请输入年月日");
	int year=scanner.nextInt();
	System.out.println("请输入月");
	int month=scanner.nextInt();
	//打印这个月的日历
	printCalendar(year,month);
	}
	//指定日期的日历
	private static void printCalendar(int year, int month) {
		System.out.println("日\t一\t二\t三\t四\t五\t六");
		
		//设定当月第一天星期几
		int firstDay=getWeekday(year,month,1);
		
		for(int i=1;i<=firstDay;i++){
			System.out.print("\t");
		}
		int count=firstDay;							//换行计数
		for(int i=1;i<=getDaysOfMonth(year,month);i++){
			System.out.print(i+"\t");
			count++;
			//判断换行计数是否到7，true换行
			if(count%7==0){
				System.out.println();
			}
		}
	}
	//获得每个月天数
	private static int getDaysOfMonth(int year, int month) {
		switch (month) {
		case 1:
		case 3:
		case 5:
		case 7:
		case 8:
		case 10:
		case 12:
			return 31;
		case 4:
		case 6:
		case 9:
		case 11:
			return 30;
		//判断闰月天数
		case 2:
			if(isLeapYear(year)){
				return 29;
			}else{
				return 28;
			}

		
		}
		return 0;
	}
	//判断是否是闰年
	private static boolean isLeapYear(int year) {
		if((year%4==0 && year%100!=0)||year%400==0 ){
			return true;
		}
		return false;
	}
	//获得每月1号星期几
	private static int getWeekday(int year, int month, int day) {
		int sumDay=0;
		//获得从1900年到当前年的所有天数
		sumDay=allYear(year, month,day);
		//所有天数取余7等于星期几
		return sumDay%7;
	}
	//获得从1900年到当前-1年的所有天数
	private static int allYear(int year,int month,int day) {
		int sum=0;
		for(int i=1900;i<year;i++){
			if(isLeapYear(i)){
				sum+=366;
			}else{
				sum+=365;
			}
		}
		//获得当年所有月份的天数加上日期天数
		sum+=getDaysInCurrentYear(year, month,day);
		return sum;
	}
	//获得当年所有月份的天数加上日期天数
	private static int getDaysInCurrentYear(int year, int month,int day) {
		int sum=0;
		for(int m=1;m<month;m++){
			sum+=getDaysOfMonth(year, m);
		}
		return sum+day;
	}
	
}
